<!-- flagged.htmx -->
<div class="table-container rounded-lg shadow mt-4">
    <table class="custom-table w-full">
        <thead>
            <tr>
                <th class="text-center"><i class="fa-regular fa-square-minus"></i></th>
                <th>Time</th>
                <th>Entity Name</th>
                <th>Flags</th>
                <th></th>
            </tr>
        </thead>
        <tbody id="table-body"></tbody>
    </table>
</div>

<!-- Popup Container for displaying dynamic content -->
<div id="popup-container"></div>

<!-- Table Footer -->
<div hx-get="src/components/table/table-footer.htmx" hx-trigger="load"></div>

<!-- Dropdown container -->
<div id="dropdown-container"></div>

<!-- Script to Render Table Data -->
<script>
  document.addEventListener("htmx:afterSettle", () => {
    const tableBody = document.getElementById("table-body");

    if (tableBody) {
        const data = [
            { id: 1, time: "14:56", entityName: "Violla Maeya", flags: ["Location", "Form Duration", "+4"] },
            { id: 2, time: "14:56", entityName: "Violla Maeya", flags: ["Location", "Form Duration", "+4"] },
            { id: 3, time: "14:56", entityName: "Violla Maeya", flags: ["Location", "Form Duration", "+4"] },
            { id: 4, time: "14:56", entityName: "Violla Maeya", flags: ["Location", "Form Duration", "+4"] },
        ];

        tableBody.innerHTML = ""; // Clear previous data

        data.forEach(item => {
            const row = document.createElement("tr");

            row.innerHTML = `
                <td class="text-center">${item.id}</td>
                <td>${item.time}</td>
                <td>${item.entityName}</td>
                <td>
                    ${item.flags.map(flag => 
                        flag.startsWith('+') 
                        ? `<span class="badge clickable-badge cursor-pointer text-blue-500" hx-get="src/components/dropdown.htmx" hx-target="#dropdown-container">${flag}</span>`
                        : `<span class="badge">${flag}</span>`
                    ).join(" ")}
                </td>
                <td class="text-right text-blue-800">
                    <i class="fa-regular fa-flag"></i>
                </td>
            `;

            tableBody.appendChild(row);
        });

        // Trigger HTMX to process dynamically added elements
        htmx.process(tableBody);
    }

    // Open/Close dropdown on clicking + flag
    document.querySelectorAll('.clickable-badge').forEach(badge => {
        badge.addEventListener('click', function(event) {
            event.stopPropagation();  
            
            const dropdown = document.getElementById("dropdown-container");

            if (dropdown) {
                // If the dropdown is already visible, hide it
                if (dropdown.classList.contains("block")) {
                    dropdown.classList.add("hidden");
                    dropdown.classList.remove("block");
                } else {
                    // Otherwise, show the dropdown
                    dropdown.classList.remove("hidden");
                    dropdown.classList.add("block");

                    // Position the dropdown near the + icon (badge)
                    const rect = event.target.getBoundingClientRect();
                    dropdown.style.top = `${rect.bottom + window.scrollY + 5}px`;  // 5px offset for spacing
                    dropdown.style.left = `${rect.left + window.scrollX}px`;

                }
            } 
        });
    });

    // Close dropdown on outside click
    document.addEventListener("click", (event) => {
        const isClickInsideDropdown = event.target.closest("#dropdown-container");
        const isClickOnBadge = event.target.classList.contains("clickable-badge");

        if (!isClickInsideDropdown && !isClickOnBadge) {
            const dropdown = document.getElementById("dropdown-container");
            if (dropdown) {
                dropdown.classList.add("hidden");
                dropdown.classList.remove("block");
            }
        }
    });
});


</script>
